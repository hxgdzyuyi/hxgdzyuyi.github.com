<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雨忆</title>
  <subtitle>关于开发</subtitle>
  <id></id>
  <link href="http://hxgdzyuyi.github.com"/>
  <link href="http://hxgdzyuyi.github.com" rel="self"/>
  <updated>2014-01-07T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>中文字体其实也可以用在网页上的</title>
    <link rel="alternate" href="/blog/chinese-subset.html"/>
    <id>/blog/chinese-subset.html</id>
    <published>2014-01-07T00:00:00Z</published>
    <updated>2014-01-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;h2&gt;中文字体和 @font-face&lt;/h2&gt;

&lt;p&gt;对于互联网而言，自定义字体从来不是一个陌生的东西，&lt;a href="http://web.archive.org/web/19990302042057/http://www.microsoft.com/typography/web/designer/face1.htm"&gt;IE 4&lt;/a&gt; 从 1997 年起就已经支持在浏览器中嵌入自定义的字体。而这一种技术被 &lt;a href="http://www.google.com/fonts"&gt;Goolge Fonts&lt;/a&gt; 等免费字体服务推到了一个新的高度。前端工程师借助于 &lt;a href="https://developer.mozilla.org/zh-CN/docs/CSS/@font-face"&gt;@font-face&lt;/a&gt; ， 可以轻松的在网页上使用各种字体，基本已经成为国外网页设计的标配了。&lt;/p&gt;
</summary>
    <content type="html">&lt;h2&gt;中文字体和 @font-face&lt;/h2&gt;

&lt;p&gt;对于互联网而言，自定义字体从来不是一个陌生的东西，&lt;a href="http://web.archive.org/web/19990302042057/http://www.microsoft.com/typography/web/designer/face1.htm"&gt;IE 4&lt;/a&gt; 从 1997 年起就已经支持在浏览器中嵌入自定义的字体。而这一种技术被 &lt;a href="http://www.google.com/fonts"&gt;Goolge Fonts&lt;/a&gt; 等免费字体服务推到了一个新的高度。前端工程师借助于 &lt;a href="https://developer.mozilla.org/zh-CN/docs/CSS/@font-face"&gt;@font-face&lt;/a&gt; ， 可以轻松的在网页上使用各种字体，基本已经成为国外网页设计的标配了。&lt;/p&gt;

&lt;p&gt;可是回过头来一看，中文 和 font-face 似乎从来没有什么交集， “在网页中使用个性化的中文字体？” 这看起来是一件很困难的事情， 并且很少人做过的事情。仔细想想，瓶颈基本上可以归结在两个点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;中文字符太多，制作精良的中文字体太少，成本也大。&lt;/li&gt;
&lt;li&gt;中文字符太多，导致文件庞大，动辄数个 MB，下载成本太大。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;如何解决中文字体过大的问题&lt;/h3&gt;

&lt;p&gt;相比起我们希望的， 在网页上使用中文字体，中文字体更早，并且更频繁的用于 PDF 上。 而且 PDF 同样对文件大小有很严苛的限制。基本上前辈们为了解决 PDF 文件可以使用各种漂亮的字体，并且文件体积足够小，有一种叫做 字体子集 (embedded subset) 的概念，就是将原有的字体裁剪出只被这个 PDF 文件使用的部分，从而达到缩小字体体积的目的。相对应的概念叫做 (full embedded fonts)。 参考这个方案，我们只需要针对特定的网页裁剪出特定的字体就可以了，这样让网页在流量，打开速度和美观上达到了和谐。&lt;/p&gt;

&lt;p&gt;我们借助 Google Fonts 使用的类库 &lt;a href="https://code.google.com/p/sfntly/"&gt;sfntly&lt;/a&gt; 可以轻松做到这一点， sfntly 可以轻松的处理基于 &lt;a href="http://en.wikipedia.org/wiki/SFNT"&gt;sfnt&lt;/a&gt; 格式存储的字体， 拆分， 裁剪， 生成 WOFF， TTF， EOT 等字体。&lt;/p&gt;

&lt;p&gt;比如直接使用 sfntly 内置的 sfnttool， 可以看到它的命令帮助&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;sfnttool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;
  &lt;span class="n"&gt;Subset&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;?&lt;span class="o"&gt;|-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;|-&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;fontfile&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;
  &lt;span class="n"&gt;Prototype&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;subsetter&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;?&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;  &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;   &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bench&lt;/span&gt;  &lt;span class="n"&gt;Benchmark&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hints&lt;/span&gt;  &lt;span class="n"&gt;Strip&lt;/span&gt; &lt;span class="n"&gt;hints&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;woff&lt;/span&gt;   &lt;span class="n"&gt;Output&lt;/span&gt; &lt;span class="n"&gt;WOFF&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;eot&lt;/span&gt;  &lt;span class="n"&gt;Output&lt;/span&gt; &lt;span class="n"&gt;EOT&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mtx&lt;/span&gt;  &lt;span class="n"&gt;Enable&lt;/span&gt; &lt;span class="n"&gt;Microtype&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;compression&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;EOT&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以轻松的从 MFYuehei.ttf 中提取出只有 &amp;#39;中文&amp;#39; 两个字的字体&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;sfnttool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;中文&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;MFYuehei&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ttf&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;MFYuehei&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ttf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总的来说在裁剪字体这条方向上， 目前也有几种在这个方向上的努力， 稍做介绍。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/hxgdzyuyi/cjk-subsetter"&gt;CjkSubsetter&lt;/a&gt; 本站使用的 Rack 中间件借 sfntly， 搭配 middleman 生成了现在所见的这个静态网站&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.foundertype.com/cloudfont/cloudfont.html"&gt;方正字体云服务&lt;/a&gt; 收费， 方正字体&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.justfont.com/"&gt;justfont&lt;/a&gt; 收费， 使用 js 请求的方案， 原则上可以嵌入到任何网站， 有 api 请求限制， 字体有限。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;如何找到优秀的中文字体&lt;/h3&gt;

&lt;p&gt;以下罗列几款推荐的，个人使用免费的资源&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://makefont.com/"&gt;造字工房&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://font.sentywed.com/chalk.htm"&gt;新蒂黑板报体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.unifont.org/fontguide/"&gt;Unicode Font Guide For Free/Libre Open Source Operating Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.ubuntu.org.cn/%E5%85%8D%E8%B4%B9%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93"&gt;Ubuntu wiki - 免费中文字体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://typeland.com/typeface/TpldYiFengScripture/"&gt;TypeLand 儀鳳寫經體&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;中文字体的为设计带来的变革&lt;/h2&gt;

&lt;h3&gt;作为浏览器的基本组成，可以和 Javascript 和 CSS 互动&lt;/h3&gt;

&lt;p&gt;显然，字符是网页最基本的组成部分。比起图片来，字体更加的灵活，可以更充分的使用浏览器原生的功能，给设计带来无限可能。&lt;/p&gt;

&lt;p&gt;比如下表显示了中文字体和 CSS 互动的几个例子。这些还没有涉及到动画，可以更加的精彩。&lt;/p&gt;

&lt;table class="table table-bordered table-striped"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;字体属性&lt;/th&gt;
      &lt;th&gt;效果&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;字号大小&lt;/td&gt;
      &lt;td&gt;
        &lt;span class="webfont-mfyuehei" style="font-size: 20px"&gt;大&lt;/span&gt; / &lt;span class="webfont-mfyuehei" style="font-size: 12px"&gt;小&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;颜色&lt;/td&gt;
      &lt;td&gt;
        &lt;span class="webfont-mfyuehei" style="color:green; font-size: 20px"&gt;颜&lt;/span&gt; &lt;span class="webfont-mfyuehei" style="color:#37a7d4; font-size: 20px"&gt;色&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;粗细&lt;/td&gt;
      &lt;td&gt;
        &lt;span class="webfont-mfyuehei" style="font-weight: 800; font-size: 20px;"&gt;文&lt;/span&gt; &lt;span class="webfont-mfyuehei" style="font-weight: 100; font-size: 20px"&gt;文&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CSS3 Text Effects / SVG filters&lt;/td&gt;
      &lt;td&gt;
        &lt;span class="webfont-mfyuehei" style="color:#666; font-size: 22px; text-shadow: 1px 1px 0px #eee， 2px 3px 0px #ddd; "&gt;中文&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3&gt;可以使用浏览器原生的禁则功能，包括响应式的网页设计。&lt;/h3&gt;

&lt;p&gt;浏览器每一个行文字的结尾都遵循了标准的禁则(比如中文里头逗号不能出现在第一行的第一个字符)。使用中文字体并不会破坏这个特性，让优秀的设计可以在不同的设备完美的展现。&lt;/p&gt;

&lt;div class="webfont-mfyuehei resizeable" style="resize: horizontal; overflow: hidden; width: 100px; border; padding: 10px; border: 1px solid #ddd; border-radius: 10px"&gt;
中文字体，关键是可以：“禁则”哦!!!
&lt;/div&gt;

&lt;h3&gt;更多精彩的实例&lt;/h3&gt;

&lt;p&gt;以下三个实例均 fork 自 codepen.io，仅仅替换了其中的中文字体，想表达的就是中文字体确实让网页设计更加的有趣。&lt;/p&gt;

&lt;p data-height="468" data-theme-id="3428" data-slug-hash="sGCDw" data-user="hxgdzyuyi" data-default-tab="result" class='codepen'&gt;See the Pen &lt;a href='http://codepen.io/hxgdzyuyi/pen/sGCDw'&gt;CSS3 Card Deck Drop Down&lt;/a&gt; by hxgdzyuyi (&lt;a href='http://codepen.io/hxgdzyuyi'&gt;@hxgdzyuyi&lt;/a&gt;) on &lt;a href='http://codepen.io'&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;script async src="//codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p data-height="268" data-theme-id="3428" data-slug-hash="vwDqg" data-user="hxgdzyuyi" data-default-tab="result" class='codepen'&gt;See the Pen &lt;a href='http://codepen.io/hxgdzyuyi/pen/vwDqg'&gt;The Walking Dead (webkit)&lt;/a&gt; by hxgdzyuyi (&lt;a href='http://codepen.io/hxgdzyuyi'&gt;@hxgdzyuyi&lt;/a&gt;) on &lt;a href='http://codepen.io'&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;script async src="//codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p data-height="268" data-theme-id="3428" data-slug-hash="ugpIb" data-user="hxgdzyuyi" data-default-tab="result" class='codepen'&gt;See the Pen &lt;a href='http://codepen.io/hxgdzyuyi/pen/ugpIb'&gt;CSS Text filling with water&lt;/a&gt; by hxgdzyuyi (&lt;a href='http://codepen.io/hxgdzyuyi'&gt;@hxgdzyuyi&lt;/a&gt;) on &lt;a href='http://codepen.io'&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;script async src="//codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;h2&gt;感谢&lt;/h2&gt;

&lt;p&gt;本站使用了 &lt;a href="http://makefont.com/"&gt;造字工房&lt;/a&gt; 的悦黑常规体， 和 &lt;a href="http://font.sentywed.com/chalk.htm"&gt;新蒂黑板报体&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;其他字体和网页排版相关文章&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.douban.com/note/316522600/"&gt;不同平台浏览器字体渲染对比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/mockee/type-is-beautiful"&gt;@mockee 的幻灯 Type is Beautiful&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
</feed>
